TITLE:: Cell_Matrix
summary:: Matrice carrée d'oscillateurs en interaction
categories:: Extensions>Cell Grid
related:: Classes/SomeRelatedClass, Reference/SomeRelatedStuff, etc.

DESCRIPTION::
Cell_Matrix est une grille carrée de Cell_Group (oscillateurs en interaction avec chaîne d'effets).
Chaque groupe prend ses entrées sur les sorties des cellules voisines, en ordre aléatoire.
Le module de sortie selectionné permet d'effectuer le rendu sur les sorties de SC.

CLASSMETHODS::

METHOD:: new
Crée et démarre une instance de Cell_Matrix.

ARGUMENT:: size
taille de la grille (carré de size*size)

ARGUMENT:: volume
gain global sur [0,1]

ARGUMENT:: renewalTime
change une cellule toutes les renewalTime secondes

ARGUMENT:: outParms
tableau qui précise le type de sortie:

- ['sum']:                     somme de toutes les sorties

- ['walk', speed]:             se déplace aléatoirement au maximum de speed cellules par seconde
                               en écoutant les cellules voisines

- ['fly', speed, zSpeed]:      se déplace en écoutant sur un rayon déterminé par l'altitude
                               qui change au maximum de zSpeed par seconde

- ['fly', speed, altCycle]:    l'altitude est déterminée par un cycle
                               [[altitude, ...],[temps, ...]]

- ['flypan', speed, zSpeed]

- ['flypan', speed, altCycle]: idem avec pan stereo aleatoire

- ['end', speed, program]:     idem sauf que l'altitude est déterminée par un programme
                               [[altinit, altitude, ...],[temps, ...]] (s'arrête à la fin)


ARGUMENT:: genParms
soit nil (paramètres par défaut), soit un tableau:

- weights:   tableau des probabilités de modulation [pNoise, pFwd, pDel, pFM, pAmp]

- nseParms:  tableau des paramètres de bruitage [nseMax, nseLowOct, nseHighOct]

--- nseMax:     quantité maximale de bruit [0,1]

--- nseLowOct:  nombre d'octaves maximum en dessous de la fréquence de base

--- nseHighOct: nombre d'octaves maximum en dessus de la fréquence de base

- fwdMax:    quantité maximale de mélange de l'entrée auxiliaire [0,1]

- delMaxExp: temps maximal de retard (exponentiel à partir de 2**-14)

- fmOct:     nombre d'octaves maximal de la modulation de fréquence

- ampMax:    quantité maximale de modulation en anneau [0,1]

ARGUMENT:: rec
soit nil (pas d'enregistrement), soit [[fadeIn, fadeOut, time], path]
(l'enregistrement ajoute une marge de 4 secondes au début et à la fin)

- fadeIn:  temps de fondu d'entrée

- fadeOut: temps de fondu de sortie

- time:    temps total (y compris les fondus)

- path:    le chemin du fichier cible

returns:: une instance de Cell_Matrix

INSTANCEMETHODS::

METHOD:: newCell
Crée une nouvelle cellule.

ARGUMENT:: x
Abscisse de la cellule.

ARGUMENT:: y
Ordonnée de la cellule.

returns:: Un nouveau Cell_Group.

METHOD:: init
Appelé en interne par le constructeur.

METHOD:: free
Arrête la grille et supprime toutes ses composantes

EXAMPLES::

code::
// exemples de base
a = Cell_Matrix(2, 0.75, 8);
a = Cell_Matrix(4, 0.75, 0.5);

// avec déplacement
a = Cell_Matrix(4, 0.75, 0.5, ['walk', 1]);
a = Cell_Matrix(8, 0.75, 0.5, ['walk', 1]);
a = Cell_Matrix(8, 0.75, 0.5, ['walk', 2]);

// avec altitude
a = Cell_Matrix(8, 0.75, 0.5, ['fly', 2, 0.125]);
a = Cell_Matrix(8, 0.75, 0.5, ['flypan', 2, 0.125]);

// avec programmation
a = Cell_Matrix(8, 0.75, 0.5, ['fly', 2, [[1,1,2,2,3,3,4,4],[112,8]]]);
a = Cell_Matrix(8, 0.75, 0.5, ['flypan', 2, [[1,1,2,2,3,3,4,4],[112,8]]]);
a = Cell_Matrix(8, 0.75, 0.5, ['flypan', 2, [[4,4,1],[30,8,352]]]);

// de grosses grilles (40%-45% CPU sur Core i5 avec supernova)
a = Cell_Matrix(12, 0.75, 0.5, ['flypan', 2, [[1,1,2,2,3,3,4,4,5,5,6,6],[52,8]]]);
(
a = Cell_Matrix(12, 0.75, 0.5, ['flypan', 2, [[6,6,1,1,2,2,3,3,4,4,5,5],
	[[22]++(172!3)++[112,52],8!6].lace(12)]]);
)
a = Cell_Matrix(12, 0.75, 0.5, ['flypan', 2, [[1,6],[352,8]]]);
a = Cell_Matrix(12, 0.75, 0.5, ['flypan', 2, [[6,6,1],[30,8,352]]]);
// une très grosse grille (65-70% CPU, mêmes conditions)
a = Cell_Matrix(14, 0.75, 0.5, ['flypan', 2, [[1,7],[412,8]]]);
// une grille encore plus grosse (80% CPU, mêmes conditions)
a = Cell_Matrix(16, 0.75, 0.5, ['flypan', 2, [[1,8],[472,8]]]);

// programme avec terminaison
a = Cell_Matrix(12, 0.75, 0.5, ['end', 2, [[1,1,2,2,3,3,4,4,5,5,6,6],[22!5, 8!5].lace(10)++[30]]]);

// avec genParms
// paramètres par defaut
(
a = Cell_Matrix(8, 0.75, 0.5, ['flypan', 2, [[4,4,1],[30,8,352]]],
	// probabilités, bruit, aux, retard, FM, ringmod
	[[0.5,0.5,0.5,0.5,0.5], [1.0, -3.0, 3.0], 1.0, 8.0, 1.0, 1.0]);
)

// avec enregistrement
(
// paramètres standard
a = Cell_Matrix(12, 0.75, 0.5, ['end', 2,
	// paramètres de programmation d'altitude et de durée
	[[1,1,2,2,3,3,4,4,5,5,6,6],[22!5, 8!5].lace(10)++[30]]],
	// paramètres d'enregistrement
	rec: [[5,5,30*6], nil]);
)
// arrête la simulation
a.free;
::

